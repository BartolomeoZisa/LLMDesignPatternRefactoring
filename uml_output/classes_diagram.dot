digraph UML {
	rankdir=BT
	node [fillcolor=white fontname=Helvetica fontsize=10 shape=record style=filled]
	Arm [label="{ Arm | attack_modifier\lbase_attack\l | __init__(base_attack, attack_modifier)\l__str__()\lget_attack_power()\l }"]
	GhoulFactory [label="{ GhoulFactory |  | create_arms()\lcreate_legs()\l }"]
	Leg [label="{ Leg | base_speed\lspeed_modifier\l | __init__(base_speed, speed_modifier)\l__str__()\lget_speed()\l }"]
	Monster [label="{ Monster | arms\llegs\lname\l | __init__(name, legs, arms)\l__str__()\lget_total_attack()\lget_total_speed()\l }"]
	MonsterFactory [label="{ MonsterFactory |  | create_arms()\lcreate_legs()\lcreate_monster(name)\l }"]
	SkeletonArm [label="{ SkeletonArm |  | __init__()\l }"]
	SkeletonFactory [label="{ SkeletonFactory |  | create_arms()\lcreate_legs()\l }"]
	SkeletonLeg [label="{ SkeletonLeg |  | __init__()\l }"]
	ZombieArm [label="{ ZombieArm |  | __init__()\l }"]
	ZombieFactory [label="{ ZombieFactory |  | create_arms()\lcreate_legs()\l }"]
	ZombieLeg [label="{ ZombieLeg |  | __init__()\l }"]
	GhoulFactory -> MonsterFactory [arrowhead=empty]
	Arm -> Monster [arrowhead=diamond]
	Leg -> Monster [arrowhead=diamond]
	SkeletonArm -> Arm [arrowhead=empty]
	SkeletonFactory -> MonsterFactory [arrowhead=empty]
	SkeletonLeg -> Leg [arrowhead=empty]
	ZombieArm -> Arm [arrowhead=empty]
	ZombieFactory -> MonsterFactory [arrowhead=empty]
	ZombieLeg -> Leg [arrowhead=empty]
}
