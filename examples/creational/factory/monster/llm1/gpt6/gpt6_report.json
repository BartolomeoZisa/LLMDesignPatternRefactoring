{"created": 1744829169.0412016, "duration": 0.03949451446533203, "exitcode": 1, "root": "/home/bartolomeo/projects/Tesi", "environment": {}, "summary": {"failed": 2, "passed": 1, "total": 3, "collected": 3}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored", "type": "Package"}]}, {"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py", "outcome": "passed", "result": [{"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py::test_zombie_factory_creates_correct_monster", "type": "Function", "lineno": 6}, {"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py::test_skeleton_factory_creates_correct_monster", "type": "Function", "lineno": 19}, {"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py::test_ghoul_factory_creates_mixed_monster", "type": "Function", "lineno": 32}]}, {"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored", "outcome": "passed", "result": [{"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py", "type": "Module"}]}], "tests": [{"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py::test_zombie_factory_creates_correct_monster", "lineno": 6, "outcome": "failed", "keywords": ["test_zombie_factory_creates_correct_monster", "test_gpt6_monster.py", "test_refactored", "gpt6", "llm1", "monster", "factory", "creational", "examples", "Tesi", ""], "setup": {"duration": 0.0006095090029702988, "outcome": "passed"}, "call": {"duration": 0.0004208390018902719, "outcome": "failed", "crash": {"path": "/home/bartolomeo/projects/Tesi/examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py", "lineno": 18, "message": "assert 8.5 == 17.0 \u00b1 1.7e-05\n  \n  comparison failed\n  Obtained: 8.5\n  Expected: 17.0 \u00b1 1.7e-05"}, "traceback": [{"path": "../../examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py", "lineno": 18, "message": "AssertionError"}], "longrepr": "def test_zombie_factory_creates_correct_monster():\n        factory = ZombieFactory()\n        monster = factory.create_monster(\"Zombie\")\n    \n        # Assert all legs and arms are of Zombie types\n        assert all(isinstance(leg, ZombieLeg) for leg in monster.legs)\n        assert all(isinstance(arm, ZombieArm) for arm in monster.arms)\n    \n        # Speed: base=5, modifier=0.75 -> 3.75 per leg\n        assert monster.get_total_speed() == pytest.approx(3.75)\n        # Attack: base=10, modifier=0.85 -> 8.5 per arm\n>       assert monster.get_total_attack() == pytest.approx(17.0)\nE       assert 8.5 == 17.0 \u00b1 1.7e-05\nE         \nE         comparison failed\nE         Obtained: 8.5\nE         Expected: 17.0 \u00b1 1.7e-05\n\n../../examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py:18: AssertionError"}, "teardown": {"duration": 0.00013695699817617424, "outcome": "passed"}}, {"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py::test_skeleton_factory_creates_correct_monster", "lineno": 19, "outcome": "failed", "keywords": ["test_skeleton_factory_creates_correct_monster", "test_gpt6_monster.py", "test_refactored", "gpt6", "llm1", "monster", "factory", "creational", "examples", "Tesi", ""], "setup": {"duration": 8.322700159624219e-05, "outcome": "passed"}, "call": {"duration": 0.0002303949986526277, "outcome": "failed", "crash": {"path": "/home/bartolomeo/projects/Tesi/examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py", "lineno": 31, "message": "assert 18.75 == 37.5 \u00b1 3.7e-05\n  \n  comparison failed\n  Obtained: 18.75\n  Expected: 37.5 \u00b1 3.7e-05"}, "traceback": [{"path": "../../examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py", "lineno": 31, "message": "AssertionError"}], "longrepr": "def test_skeleton_factory_creates_correct_monster():\n        factory = SkeletonFactory()\n        monster = factory.create_monster(\"Skeleton\")\n    \n        # Assert all legs and arms are of Skeleton types\n        assert all(isinstance(leg, SkeletonLeg) for leg in monster.legs)\n        assert all(isinstance(arm, SkeletonArm) for arm in monster.arms)\n    \n        # Speed: base=8, modifier=1.0 -> 8.0 per leg\n        assert monster.get_total_speed() == pytest.approx(8.0)\n        # Attack: base=15, modifier=1.25 -> 18.75 per arm\n>       assert monster.get_total_attack() == pytest.approx(37.5)\nE       assert 18.75 == 37.5 \u00b1 3.7e-05\nE         \nE         comparison failed\nE         Obtained: 18.75\nE         Expected: 37.5 \u00b1 3.7e-05\n\n../../examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py:31: AssertionError"}, "teardown": {"duration": 0.00011916199946426786, "outcome": "passed"}}, {"nodeid": "examples/creational/factory/monster/llm1/gpt6/test_refactored/test_gpt6_monster.py::test_ghoul_factory_creates_mixed_monster", "lineno": 32, "outcome": "passed", "keywords": ["test_ghoul_factory_creates_mixed_monster", "test_gpt6_monster.py", "test_refactored", "gpt6", "llm1", "monster", "factory", "creational", "examples", "Tesi", ""], "setup": {"duration": 8.14220002212096e-05, "outcome": "passed"}, "call": {"duration": 0.00011644000187516212, "outcome": "passed"}, "teardown": {"duration": 7.939699935377575e-05, "outcome": "passed"}}]}